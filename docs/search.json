{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2024-05-03T02:15:09-04:00"
    },
    {
      "path": "generative_art.html",
      "title": "Generative aRt",
      "description": "Generative art is a captivating realm where code and creativity intertwine, giving rise to unique visual experiences. Created using the powerful R programming language, my explorations in generative art delve into the beauty of algorithmic creation, where each line of code becomes a brushstroke on a digital canvas. Through the manipulation of variables, functions, and mathematical concepts, I breathe life into shapes, colors, and patterns that evolve and interact in unpredictable ways. This intersection of programming prowess and artistic expression opens doors to endless possibilities, inviting viewers to immerse themselves in a world where art emerges from the depths of code.",
      "author": [],
      "contents": "\nMosaic Art\n\n\n\n\n\n\nCreating mosaic art in R involves piecing together small elements or tiles to form a larger image or pattern. It’s a creative process that combines coding and artistry, much like arranging physical mosaic pieces. In R, you can use packages like ggplot2 or specialized packages like ggmosaic to generate mosaic plots, which visually represent categorical data in a grid of rectangles or squares. These plots use color intensity or shading to indicate the frequency or proportion of data points in each category, creating a visually engaging representation of your dataset. The process often involves manipulating data frames, specifying plot aesthetics, and customizing the layout to achieve the desired artistic and analytical effects.Collatz Art\n\n\n\nIn R, you can generate Collatz sequences using iterative algorithms and then visualize them in various ways. One approach might be to plot the sequence lengths against the starting values, creating a scatter plot or a line plot that showcases patterns or anomalies in the sequences. You can use packages like ggplot2 for plotting and dplyr for data manipulation to streamline your workflow. Experimenting with color schemes, point sizes, and plot aesthetics can lead to visually striking representations that help deepen your understanding of this intriguing mathematical problem.Square Art\n\n\n\nCreating square art in R involves using programming techniques to generate visually appealing patterns or designs composed of squares. This can be done using various R packages such as ggplot2, grid, or ggpattern for more intricate designs. One approach is to create a grid of squares where each square’s color, size, or position is determined by data values or algorithmic rules. For example, you could create a mosaic-like pattern using different colors to represent categories in a dataset, or you could create a pixel art-style image using squares of varying colors.\n\n\n",
      "last_modified": "2024-05-03T02:15:13-04:00"
    },
    {
      "path": "gghalves.html",
      "title": "GGHalves",
      "description": "GGhalves is a new R package that makes it easy to compose your own half-plots using `ggplot2`. We can create half plots to showcase two plots side-by-side. On this page, we can look at the creation of a gghalves plot using `half_geom_boxplot`, and `half_geom_dotplot`.\nWe can easily do this with a half-plot thanks to gghalves. GGhalves is great for making customized `ggplot2` plots. But, you’ll still need to learn how to visualize data with `ggplot2`. ",
      "author": [],
      "contents": "\nHalf Boxplot and Half Dotplot\nFor my GGHalves demonstration we used the mtcars dataset, to help explain how we can create this informative data visualizations.\nThe basic dotplot we created initially was the following:\n\n\n\nThe graph you see above is a very basic and first draft of a gghalves plot, using half_geom_boxplot and half_geom_dotplot. The data is showcasing how does the number of cylinders in a vehicle’s engine, have an effect on the miles per gallon (knowing that the more cylinders, means the more gasoline needed to produce power).Although we can see the outliers a bit because of the color, it is still hard to really see. We can change the size of the dotplot points and the transparency to see both dotplot points and the outliers.\n\n\n\nIn the gghalves plot above, this is the second draft from comparing the number of cylinders to the average miles per gallon those engines see. We can change the outlier colors so that we can make it much more easier to see.Considering it is hard to see the outliers, because the size and color of the half_geom_dotplot, we can adjust those elements to make the outliers even more visible for the viewers.\n\n\n\nIn the previous GGHalves visualization, we could see the red outliers, but they were such huge in size and the color being more dominant, it was hard to clearly see our outliers. In this visualization above, we have changed the size of the dots on the half_geom_dotplot, as well increase the transparency, so we can see if there are any dots behind another one.Lastly, to ensure our viewers can fully understand the visualization, we must add our axes labels and a title.\n\n\n\nThe gghalves visualization above is the final and complete verison, where we have a clean color matching, we have marked are outliers to appear different than the other dots, and labeling our axis to make the visualization informative.\n\n\n",
      "last_modified": "2024-05-03T02:15:15-04:00"
    },
    {
      "path": "index.html",
      "title": "Devin's MATH 230 Journey",
      "author": [],
      "contents": "\n\n          \n          \n          Home\n          \n          \n          \n          \n          R Projects\n           \n          ▾\n          \n          \n          Infographic\n          Generative art\n          GGHalves\n          Shiny App\n          Personal Favorites\n          \n          \n          Smiles Per Gallon\n          ☰\n          \n          \n      \n        \n          \n            \n              \n            \n              Devin’s MATH 230 Journey\n            \n            \n              \n                \n                    \n                      \n                         LinkedIn\n                      \n                    \n                  \n                                    \n                    \n                      \n                         Email\n                      \n                    \n                  \n                                  \n            \n          \n        \n        \n        \n          \n            \n            —\n            \n            \n            Biography:\n            \n            \n            —\n            My name is Devin Halliburton and I am a dynamic tech\n            professional with a passion for problem-solving and\n            innovation. From an early age, I have had a keen interest in\n            technology, which led to a deep exploration of various\n            programming languages and tools.\n            With a solid foundation in languages like Python, Java,\n            C, and R, I have been able to hone skills in creating\n            efficient and scalable solutions across different\n            platforms.\n            Throughout this website, you will be able to access a\n            showcase of the work I have completed in MATH-230: Data\n            Visualizations and Computing. From generative art to my\n            final course project, there are many projects to be viewed.\n            I hope you enjoy the website, just as much as I enjoyed\n            creating it!\n            \n            \n            —\n            \n            \n            Education:\n            \n            \n            —\n            Bucknell University | Lewisburg, PA\n            Bachelor of Arts in Computer Science | August 2020 - May\n            2024\n            \n            \n            —\n            \n            \n            Experience:\n            \n            \n            —\n            Pricewaterhouse Coopers LLC | Washington, D.C.\n            Associate, Tech Operations | August 2024 - Present\n            \n          \n        \n      \n    \n\n    \n      \n        \n          \n            \n              \n            \n              Devin’s MATH 230 Journey\n            \n            \n              \n                \n                                    \n                    \n                       LinkedIn\n                    \n                  \n                                    \n                    \n                       Email\n                    \n                  \n                                  \n              \n            \n            \n              \n              —\n              \n              \n              Biography:\n              \n              \n              —\n              My name is Devin Halliburton and I am a dynamic tech\n              professional with a passion for problem-solving and\n              innovation. From an early age, I have had a keen interest\n              in technology, which led to a deep exploration of various\n              programming languages and tools.\n              With a solid foundation in languages like Python, Java,\n              C, and R, I have been able to hone skills in creating\n              efficient and scalable solutions across different\n              platforms.\n              Throughout this website, you will be able to access a\n              showcase of the work I have completed in MATH-230: Data\n              Visualizations and Computing. From generative art to my\n              final course project, there are many projects to be\n              viewed. I hope you enjoy the website, just as much as I\n              enjoyed creating it!\n              \n              \n              —\n              \n              \n              Education:\n              \n              \n              —\n              Bucknell University | Lewisburg, PA\n              Bachelor of Arts in Computer Science | August 2020 -\n              May 2024\n              \n              \n              —\n              \n              \n              Experience:\n              \n              \n              —\n              Pricewaterhouse Coopers LLC | Washington, D.C.\n              Associate, Tech Operations | August 2024 - Present\n              \n            \n        \n      \n    \n\n    \n    \n    ",
      "last_modified": "2024-05-03T02:15:26-04:00"
    },
    {
      "path": "infographic.html",
      "title": "Infographic",
      "author": [],
      "contents": "\n\n\n\n\n",
      "last_modified": "2024-05-03T02:15:28-04:00"
    },
    {
      "path": "personalfav.html",
      "title": "Personal Favorites",
      "description": "Two of my favorite data visualizations in R are hexbin plots and violin plots, each offering unique insights into data patterns and distributions. Hexbin plots are excellent for visualizing the density of data points in a two-dimensional space, especially useful for large datasets or areas with high point overlap. The hexagonal binning technique helps reduce overplotting issues common in scatter plots, making it easier to identify trends and clusters within the data. On the other hand, violin plots provide a comprehensive view of data distributions across different categories or groups, combining box plot elements with kernel density estimates. I appreciate violin plots for their ability to show the central tendency, spread, and shape of data distributions simultaneously, making them invaluable for comparing groups and identifying outliers or unusual patterns. Both hexbin plots and violin plots, with their respective strengths in handling data density and distribution visualization, have become indispensable tools in my data exploration and analysis workflows in R..",
      "author": [],
      "contents": "\nHexbin Plots\nHexbin plots in R are a powerful tool for visualizing the relationship between two continuous variables in a dataset. Unlike traditional scatter plots, which can suffer from overplotting issues with dense data, hexbin plots aggregate data points into hexagonal bins, revealing patterns and trends more clearly. Each hexagon’s color or intensity in the plot represents the density of data points within that bin, helping to visualize areas of high concentration. The hexbin package in R provides functions for creating and customizing hexbin plots, allowing users to adjust parameters such as bin size, color palette, and additional annotations. Hexbin plots are particularly useful for exploring large datasets or datasets with many overlapping points, providing insights into data distribution and relationships in a visually appealing and informative manner.\nThe data visualization you see above is looking at the correlation between SAT scores and student’s grade point averages (GPA). We can see that there is some relationship between your GPA and the SAT score you will achieve. There are some students who have a GPA lower than a 3.0, but still score reasonably high on the SAT, but once you are above a 3.0, you are likely to score nothing lower than a 1000.Violin Plots\nViolin plots in R are a versatile and informative visualization tool commonly used to display the distribution of numeric data across different categories or groups. They combine elements of box plots and kernel density plots, offering a more comprehensive view of the data’s distribution and variability. In a violin plot, each category or group is represented by a “violin” shape that mirrors the density of data points along the y-axis, with wider sections indicating higher data density. Additionally, the central line within each violin represents the median, while the shape’s width reflects the data’s distribution. R provides robust libraries such as ggplot2 for creating violin plots with customizable aesthetics, including color schemes, width adjustments, and overlays with other plot types. Violin plots are particularly useful for comparing distributions between groups, identifying outliers, and gaining insights into the underlying data structure in statistical analyses and data exploration tasks.\nThe violin plot above is comparing students who have a certain grade point average (GPA) to which award do they think has the highest priority. We can see that Students around the 3.5 GPA believe that Academy awards are the highest, while a little lower than a 3.5, students believe a Nobel is higher. Olympic awards has a huge density between a 2.75 GPA and a 3.35 GPA.\n\n\n",
      "last_modified": "2024-05-03T02:15:29-04:00"
    },
    {
      "path": "shinyapp.html",
      "title": "Shiny App",
      "description": "A Shiny App in R is a powerful tool for creating interactive web applications directly from R code. It leverages the Shiny package in R to enable users to build interactive dashboards, data visualizations, and more without needing expertise in web development languages like HTML, CSS, or JavaScript. The key components of a Shiny App include the user interface (UI) for defining the app's layout and appearance, and the server logic for handling user inputs, performing computations, and generating dynamic outputs. This reactive programming model ensures that the app responds dynamically to user interactions, updating outputs in real-time. With Shiny, R users can harness the full capabilities of R for data analysis and visualization, while also creating engaging and interactive web-based applications that can be easily shared and deployed.",
      "author": [],
      "contents": "\n\n\n.\n\n\n\n",
      "last_modified": "2024-05-03T02:15:30-04:00"
    },
    {
      "path": "usedcardata.html",
      "title": "Smiles Per Gallon",
      "description": "The used car dataset focusing on the renowned German automakers Audi, BMW, and Mercedes-Benz comprises 5565 observations and encompasses 11 key variables. These variables include cylinders, displacement, drive type, fuel type (gas), make (manufacturer), model, transmission type, city fuel efficiency, highway fuel efficiency, vehicle type, and model year. Such detailed attributes offer a comprehensive view of each vehicle's technical specifications, fuel efficiency ratings, drivetrain configurations, and model-specific details. Analysts and enthusiasts can utilize this dataset to explore trends in engine technology, fuel economy performance, transmission preferences, and model year preferences across these esteemed automotive brands, providing valuable insights into the used car market for German luxury vehicles.",
      "author": [],
      "contents": "\n\n\n\nIntroduction\nGerman manufacturers have become the forefront of producing high-end vehicles without decreasing miles per gallon significantly, hence the name smiles per gallon. For my research, we will be diving into the data behind smiles per gallon. As we move further away from the spark of automobiles manufacturers are trying to make their vehicles more fuel efficient, by making internal changes with the cylinders and displacement. We will use year, highway mpg, city mpg, and make, to help build upon our findings, and see who is the most successful German Automobile Manufacturer!\nDo Newer German Cars have Better Miles per Gallon (MPG)?\nWe will take the variables year, highway and city to see if there is correlation with the miles per gallon (mpg) they average based on the year of the vehicles. We will use the cor() function to see the linear relationship.\n\n[1] 0.3416092\n[1] 0.2760046\n\nWe can see that with both highway mpg and city mpg, the year has a weak positive linear relationship, thus we can state that has the newer models of vehicles are produced, the miles per gallon slightly increases as well. We can look at the following heat map to visualize the data:\n\n\n\nFrom the heat map visualization we can see that most of the vehicles tend to be around twelve miles per gallon to forty-five miles per gallon. As we reach the 2010 era, we can see Audi and BMW began to make the step towards hybrid and full electric vehicles, thus increasing the miles per gallon. If we take a step closer to the present we can see that in 2022 there was the spark of full electric vehicles, leading to the much higher miles per gallon, most likely giving us the slightly positive linear relationship between year and highway.\nDo Cylinders and Displacement have Correlation?\nMotorized engines have cylinders, which can vary between manufacturers, and even models from the same manufacturer. Displacement is based on the amount of oil (liters) a motorized engine needs to operate consistently. Considering that we want to see if the cylinders and displacement are correlated, thus we can assume throughout the study that whether we look at cylinders or displacement we will get the same outcome to whatever variable we are comparing it to.\n\n\n\nAs we take a look at the violin plot, we first notice that vehicles with zero cylinders (electric cars, therefore they have a battery, and not a engine) would also have no displacement. We can immediately see that as the number of cylinders increase, the displacement of an engine will increase as well. We can say that cylinders and displacement have a strong positive linear relationship, so moving forward when we talk about cylinders or displacement know changing them will not have any effect.\nDo Different Engines have Different Miles Per Gallon (MPG)?\nWhen the number of cylinders increase, the horsepower (hp) from that engine increases as well (if we are only talking about naturally aspirated engines). Considering that these German Manufacturers are well known not only for their luxury, but as well there ability to produce some of the best sports cars this world has ever seen.\nWe can create a boxplot to see if the number of cylinders has an effect on the miles per gallon:\n\n\n\nWe can initially see that the electric vehicles have the highest miles per gallon, sitting around one-hundred and twenty miles per gallon. As we add cylinders and increase, we can see that the average miles per gallon begins to decrease. There is an odd sighting where vehicles with five cylinders have a lower miles per gallon, compared to six cylinders. This of course could be due to the outliers, but as well the only vehicles with five cylinder engines is Audi, and all of their five cylinder vehicles are track orientated, therefore miles per gallon is not a priority.\nNow if we could take a step further and look more specifically at engines that are forced induction (meaning they have a turbocharger or supercharger application to add more horsepower to the engine) we would be able to see that manufacturers use force induction to achieve more power while sustaining good fuel efficiency.\nHave German Manufacturers Reduce Production of Big Displacement Vehicles?\nAs we learned above the Do Different Engines have Different Miles Per Gallon (MPG)? visualization, the number of cylinders does have a negative effect on the miles per gallon. Thus, we can also state that the bigger the displacement an engine as, the bigger decrease we will see in miles per gallon.\nWe will now see if these German powerhouses have consider this aspect when it comes to producing cars over time. We will see if the displacement in engines has increased or decreased overtime, considering that is has a negative impact on fuel efficiceny. We can use the cor function to see the linear relationship between year and displacement:\n\n[1] -0.1175525\n\nThe year and displacement have a very weak negative linear relationship, meaning we can assume that the displacement can vary over the years, but as the years increase we can see a small decrease in displacement size. We can continue looking at this relationship in a point density plot:\n\n\n\nFrom the visualization we can see that there were no electric vehicles with electric until 2011. As well, that manufacturers consistently are producing cars with high displacements around five to six liters. This is interesting to see considering as we progress towards the future, we are pushing towards a safe ecosystem, therefore getting rid of high displacement vehicles that are using more gasoline, thus decreasing our miles per gallon.\nOn the other hand, for car enthusiast that love the thrill of driving fast vehicles, this is something they would love to see, and we can trust and believe that Audi, BMW, and Mercedes-Benz is still continuing on that legacy for their consumers.\nDoes Less Cylinders mean Cheaper Gas?\nWe all have gone to the gas station and seen that the prices vary depending on the type of gas you want, from regular, midgrade, premium, and diesel. Does the number of cylinders have an effect on the type of gasoline that the vehicle will require? We will use a bar chart to help us see the data in a visualization:\n\n\n\nWe can see from the stacked bar chart that even when the number of cylinders increase, these German manufacturers still recommend the consumers to only use premium gasoline mostly for their vehicles. This can also be caused by the type of metal the engines are built out of, as well to help keep the engine in top shape as the mileage increases throughout the years.\nAudi is interesting here, because they are the only manufacturer to produce the five cylinder vehicles, therefore they prefer consumers to use regular gasoline and explain there is no need for premium.\nWho has a nitch for certain Powertrains?\nConsidering all the observations we have made above, it is now time to see which German powerhouse has made the steps towards the future of max fuel efficiency vehicles. We will be working with all the vehicles that were produced after the year 2019 (so 2020 to the present). We can see this by comparing the make and cylinders in a barplot, as well using prop.table() to see which manufacturer produces what type of engines based on the cylinders:\n0 - No Fuel Efficiency (Best)\n4 - Very Good Fuel Efficiency\n6 - Good Fuel Efficiency\n8 - Average Fuel Efficiency\n10 - Bad Fuel Efficiency\n12 - Very Bad Fuel Efficiency (Worst)\n\n\n    \n          Audi       BMW Mercedes-Benz\n  0  0.3272727 0.5000000     0.1727273\n  4  0.2474490 0.3724490     0.3801020\n  5  1.0000000 0.0000000     0.0000000\n  6  0.1937046 0.5569007     0.2493947\n  8  0.1215686 0.4392157     0.4392157\n  10 1.0000000 0.0000000     0.0000000\n  12 0.0000000 0.3750000     0.6250000\n\nBased on the barplot, we can see see that the German manufacturers are moving away from the high cylinder engines (10 and 12). This can be due to the movement from naturally aspirated sport cars, to adding forced induction (turbochargers and superchargers) on engines with less cylinders (4, 5, 6, and 8). We also can see that the manufacturers have not quite made the huge transition to making more electric vehicles compared to the combustion competitor.\nThese are all good observations, but what we are all waiting for is to see which German manufacturer of the powerhouse will be the king of Smiles Per Gallon. We can see instantly that Mercedes-Benz continues to produce the most twelve cylinders at 62.5% compared to BMW’s 37.5%. Despite Audi not having any vehicles with twelve cylinders, they are the only German manufacturer of the three that produces vehicles with ten cylinders.\nWe move on to the most seen gas guzzlers the eight cylinder vehicles, where BMW and Mercedes-Benz both make up 43.9%, compared to Audi’s 12.1%. The most popular engine worldwide is the V8 which is compromised of eight cylinders, and comes in many different forms, especially from these German manufacturers. There are so many legendary vehicles that have been produced like the BMW M5, or the Audi RS 6, or even the Mercedes-Benz C63.\nSix cylinders is where BMW is king, they have made so many different inline-six cylinder engines that are considered to be the best of the best too many. Most recently, BMW released the M340i which comes with a B58 engine (six cylinder) which is one of the most popular sports car on the market. BMW makes up 55.7% of six cylinders, while Audi is only at 19.4%, and Mercedes-Benz is at 24.9%.\nAudi’s low number in six cylinders is due to the fact that they are only the manufacturer of three that produces vehicles with five cylinders. A notable vehicle from Audi is there Audi RS 3 and the Audi TT RS.\nFour cylinders has recently began trending because of the small engines that have great fuel efficiency, but can still pack a punch when it comes to power. Due to this common notion of four cylinders, these engines are produced almost evenly across the three manufacturers. Audi making up 24.7%, BMW making up 37.2, and last, but certainly not least Mercedes-Benz with 38.0%.\nFinally, the vehicles that do not take any fuel at all, and are the best when it comes to miles per “gallon”. BMW has hit the ground running with electric vehicles, and has even produced their most powerful vehicle of all time the BMW XM which is a hybrid, but as a very powerful battery system to support it’s turbocharged eight cylinder combustion engine. BMW makes up 50.0% of the electric vehicles. Audi has been known for their unique E-Tron, which is a fully electric powered vehicle that is their top of the line as well. Audi comes in at 32.7%. Mercedes-Benz has been a bit behind when it came to transitioning to electric vehicles and making them one of their top competitors against BMW and Audi, thus Mercedes-Benz is sitting at 17.2.\n\n\n\n",
      "last_modified": "2024-05-03T02:15:36-04:00"
    }
  ],
  "collections": []
}
