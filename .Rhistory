library(wesanderson)
# Box plot
vp + scale_fill_manual(values = devinPalette)
# To use for line and point colors, add
vp + scale_colour_manual(values = devinPalette)
library(ggpubr)
devinPalette <- c("black", "#DC143C", "#D10000", "#960018", "#FFFCC7", "#F2E58F", "white")
ggplot(vehicles, aes(x = cylinders, y = displacement, fill = cylinders)) +
geom_violin(scale = "width", alpha = .5) + guides(fill = "none") +
labs(x = "Number of Cylinders in a Vehicle",
y = "Displacement of a Vehicle",
title = "Does Cylinders and Displacement have Correlation?") + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
ggplot(vehicles, aes(x = highway, y = cylinders, fill = cylinders)) + geom_boxplot() +
guides(fill = "none") +
labs(x = "Miles Per Gallon (MPG)",
y = "Number of Cylinders",
title = "Does the Number of Cylinders have an effect on the Miles Per Gallon (MPG)")+ scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
)) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
knitr::opts_chunk$set(echo = FALSE)
# Install libraries that will be used
library(ggplot2)
# Read Data Frame into our Environment and Attach for further use
vehicles <- read.csv("vehicles4.csv")
attach(vehicles)
# Clean the data even further more (creating factors)
vehicles$cylinders <- factor(vehicles$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles$drive <- factor(drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles$gas <- factor(gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles$make <- factor(make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles$transmission <- factor(transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles$type <- factor(type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
cor(year, highway)
cor(year, city)
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_fill_distiller(palette = "Spectral")
library(ggpubr)
devinPalette <- c("grey", "#FFFCC7", "#D10000", "#F2E58F", "#DC143C", "#960018", "white")
ggplot(vehicles, aes(x = cylinders, y = displacement, fill = cylinders)) +
geom_violin(scale = "width", alpha = .5) + guides(fill = "none") +
labs(x = "Number of Cylinders in a Vehicle",
y = "Displacement of a Vehicle",
title = "Does Cylinders and Displacement have Correlation?") + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
ggplot(vehicles, aes(x = highway, y = cylinders, fill = cylinders)) + geom_boxplot() +
guides(fill = "none") +
labs(x = "Miles Per Gallon (MPG)",
y = "Number of Cylinders",
title = "Does the Number of Cylinders have an effect on the Miles Per Gallon (MPG)")+ scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
cor(year, displacement)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
knitr::opts_chunk$set(echo = FALSE)
# Install libraries that will be used
library(ggplot2)
# Read Data Frame into our Environment and Attach for further use
vehicles <- read.csv("vehicles4.csv")
attach(vehicles)
# Clean the data even further more (creating factors)
vehicles$cylinders <- factor(vehicles$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles$drive <- factor(drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles$gas <- factor(gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles$make <- factor(make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles$transmission <- factor(transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles$type <- factor(type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
cor(year, highway)
cor(year, city)
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_fill_distiller(palette = "Spectral")
library(ggpubr)
devinPalette <- c("purple3", "#F2E58F", "grey", "blue1", "orange", "navy", "white")
ggplot(vehicles, aes(x = cylinders, y = displacement, fill = cylinders)) +
geom_violin(scale = "width", alpha = .5) + guides(fill = "none") +
labs(x = "Number of Cylinders in a Vehicle",
y = "Displacement of a Vehicle",
title = "Does Cylinders and Displacement have Correlation?") + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
ggplot(vehicles, aes(x = highway, y = cylinders, fill = cylinders)) + geom_boxplot() +
guides(fill = "none") +
labs(x = "Miles Per Gallon (MPG)",
y = "Number of Cylinders",
title = "Does the Number of Cylinders have an effect on the Miles Per Gallon (MPG)")+ scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
cor(year, displacement)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
knitr::opts_chunk$set(echo = FALSE)
# Install libraries that will be used
library(ggplot2)
# Read Data Frame into our Environment and Attach for further use
vehicles <- read.csv("vehicles4.csv")
attach(vehicles)
# Clean the data even further more (creating factors)
vehicles$cylinders <- factor(vehicles$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles$drive <- factor(drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles$gas <- factor(gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles$make <- factor(make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles$transmission <- factor(transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles$type <- factor(type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
cor(year, highway)
cor(year, city)
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_fill_distiller(palette = "Spectral")
library(ggpubr)
devinPalette <- c("purple3", "#F2E58F", "grey", "blue1", "orange", "navy", "white")
ggplot(vehicles, aes(x = cylinders, y = displacement, fill = cylinders)) +
geom_violin(scale = "width", alpha = .5) + guides(fill = "none") +
labs(x = "Number of Cylinders in a Vehicle",
y = "Displacement of a Vehicle",
title = "Does Cylinders and Displacement have Correlation?") + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
ggplot(vehicles, aes(x = highway, y = cylinders, fill = cylinders)) + geom_boxplot() +
guides(fill = "none") +
labs(x = "Miles Per Gallon (MPG)",
y = "Number of Cylinders",
title = "Does the Number of Cylinders have an effect on the Miles Per Gallon (MPG)")+ scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
cor(year, displacement)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
) +
scale_color_gradient(low = 'purple3', high = '#F2E58F')
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
) +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_fill_distiller(palette = "Spectral") +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50))+
scale_fill_distiller(low = 'purple4', high = '#F2E58F') +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50))+
scale_fill_distiller(palette = "Spectral") +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
knitr::opts_chunk$set(echo = FALSE)
# Install libraries that will be used
library(ggplot2)
# Read Data Frame into our Environment and Attach for further use
vehicles <- read.csv("vehicles4.csv")
attach(vehicles)
# Clean the data even further more (creating factors)
vehicles$cylinders <- factor(vehicles$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles$drive <- factor(drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles$gas <- factor(gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles$make <- factor(make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles$transmission <- factor(transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles$type <- factor(type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
cor(year, highway)
cor(year, city)
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50))+
scale_fill_distiller(palette = "Spectral") +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
library(ggpubr)
devinPalette <- c("purple3", "#F2E58F", "grey", "blue1", "orange", "navy", "white")
ggplot(vehicles, aes(x = cylinders, y = displacement, fill = cylinders)) +
geom_violin(scale = "width", alpha = .5) + guides(fill = "none") +
labs(x = "Number of Cylinders in a Vehicle",
y = "Displacement of a Vehicle",
title = "Does Cylinders and Displacement have Correlation?") + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
ggplot(vehicles, aes(x = highway, y = cylinders, fill = cylinders)) + geom_boxplot() +
guides(fill = "none") +
labs(x = "Miles Per Gallon (MPG)",
y = "Number of Cylinders",
title = "Does the Number of Cylinders have an effect on the Miles Per Gallon (MPG)")+ scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
cor(year, displacement)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
) +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
vehicles_plot <- ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
ggsave("vehicles_plot.png", plot = vehicles_plot)
heatmap_plot <- ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_fill_distiller(palette = "Spectral")
ggsave("heatmap_plot.png", plot = heatmap_plot
heatmap_plot <- ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_fill_distiller(palette = "Spectral")
ggsave("heatmap_plot.png", plot = heatmap_plot)
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
vehicles_plot <- ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
ggsave("vehicles_plot.png", plot = vehicles_plot)
knitr::opts_chunk$set(echo = FALSE)
# Install libraries that will be used
library(ggplot2)
# Read Data Frame into our Environment and Attach for further use
vehicles <- read.csv("vehicles4.csv")
attach(vehicles)
# Clean the data even further more (creating factors)
vehicles$cylinders <- factor(vehicles$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles$drive <- factor(drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles$gas <- factor(gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles$make <- factor(make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles$transmission <- factor(transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles$type <- factor(type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
cor(year, highway)
cor(year, city)
ggplot(vehicles, aes(x = year, y = highway, color = make)) +
labs(x = "Year the Vehicle was Produced",
y = "Highway Miles Per Gallon (MPG)",
title = "Have Manufacturers been Improving on Miles Per Gallon?") +
stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", color = "grey", h = c(50,50)) +
scale_fill_distiller(palette = "Spectral")
library(ggpubr)
devinPalette <- c("purple3", "#F2E58F", "grey", "blue1", "orange", "navy", "white")
ggplot(vehicles, aes(x = cylinders, y = displacement, fill = cylinders)) +
geom_violin(scale = "width", alpha = .5) + guides(fill = "none") +
labs(x = "Number of Cylinders in a Vehicle",
y = "Displacement of a Vehicle",
title = "Does Cylinders and Displacement have Correlation?") + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
ggplot(vehicles, aes(x = highway, y = cylinders, fill = cylinders)) + geom_boxplot() +
guides(fill = "none") +
labs(x = "Miles Per Gallon (MPG)",
y = "Number of Cylinders",
title = "Does the Number of Cylinders have an effect on the Miles Per Gallon (MPG)")+ scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette)
cor(year, displacement)
library(dplyr)
library(viridis)
library(ggpointdensity)
ggplot(vehicles, aes(x = year, y = displacement)) +
geom_pointdensity(size = 4) +
scale_color_viridis() + labs(
x = "Years Vehicles were Manufactured",
y = "Vehicles' Displacement (Liters)",
title = "Do Manufacturers Still Produce High Displacement Engines?"
) +
scale_color_gradient(low = 'purple4', high = '#F2E58F')
library(plotly)
# Read Data Frame into our Environment and Attach for further use
vehicles.new <- read.csv("vehiclesnew.csv")
# Clean the data even further more (creating factors)
vehicles.new$cylinders <- factor(vehicles.new$cylinders, levels = c(0, 4, 5, 6, 8, 10, 12), ordered = FALSE)
vehicles.new$drive <- factor(vehicles.new$drive, levels = c("4-Wheel Drive", "All-Wheel Drive", "Rear-Wheel Drive"), ordered = FALSE)
vehicles.new$gas <- factor(vehicles.new$gas, levels = c("Premium", "Regular", "Hybrid", "Electricity", "Diesel"), ordered = FALSE)
vehicles.new$make <- factor(vehicles.new$make, levels = c("Audi", "BMW", "Mercedes-Benz"), ordered = FALSE)
vehicles.new$transmission <- factor(vehicles.new$transmission, levels = c("Manual", "Automatic"), ordered = FALSE)
vehicles.new$type <- factor(vehicles.new$type, levels = c("Coupe", "Large", "SUV", "Subcompact", "Midsize", "Wagon", "SPV", "Minicompact", "Compact"), ordered = FALSE)
ggplotly(ggplot(vehicles.new, aes(x = cylinders, fill = make)) + geom_bar(position = "dodge") +
scale_fill_discrete(name = "Manufacturers") + theme(legend.title.align = 0.5) +
labs(
x = "Number of Cylinders",
y = "Number of Vehicles Produced",
title = "Which Engine is a Manufacturers Favorite Powertrain?"
) + scale_fill_manual(values = devinPalette) + scale_colour_manual(values = devinPalette))
prop.table(table(vehicles.new$cylinders, vehicles.new$make), margin = 1)
